/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (4.3.1).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.account.balance.delivery.v1.api;

import com.account.balance.delivery.v1.model.Response;
import io.swagger.annotations.*;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.CookieValue;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.context.request.NativeWebRequest;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
import java.util.Optional;
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.SpringCodegen", date = "2021-06-02T23:20:59.219454+08:00[Australia/Perth]")

@Validated
@Api(value = "getAccountBalance", description = "the getAccountBalance API")
public interface GetAccountBalanceApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * GET /getAccountBalance/{accountId}/currency/{currency} : Get the account balance
     * Get the account balance for given account id
     *
     * @param accountId accountId for an user (required)
     * @param currency currency details (required)
     * @return Return balance details (status code 200)
     *         or Bad request (status code 400)
     */
    @ApiOperation(value = "Get the account balance", nickname = "getAccountBalance", notes = "Get the account balance for given account id", response = Response.class, tags={ "Account Balance", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Return balance details", response = Response.class),
        @ApiResponse(code = 400, message = "Bad request") })
    @RequestMapping(value = "/getAccountBalance/{accountId}/currency/{currency}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<Response> getAccountBalance(@Pattern(regexp="^BNP\\d{4}") @ApiParam(value = "accountId for an user",required=true) @PathVariable("accountId") String accountId,@Pattern(regexp="(AUD|EUR)") @ApiParam(value = "currency details",required=true) @PathVariable("currency") String currency) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType: MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"accountId\" : \"accountId\", \"amount\" : \"amount\", \"currency\" : \"currency\", \"userId\" : \"userId\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
